name: Plan / Test on PR

on:
   push:
    branches:
      - main
   
   pull_request:
     
       
 jobs:
    
   format:
     name: fmt
     runs-on: ubunto-20.04
     steps:
       - name: Check out code
         uses: actions/checkout@v2
         
       - name: Setup Terraform
         uses: hashicorp/setup-terraform@v1
         with:
            terraform_version: 1.0.9
            
       - name: Run terraform fmt check
         id: terra-format
         run: terraform fmt -check -diff -recurrsive ./terraform
         
       
         
         
   plan:
     name: plan
     
     needs: format
     env:
       TF_VAR_allowed_account_id: ${{ secrets.ALLOWED_ACCOUNT_ID }}
     runs-on: ubunto-20.04
     strategy:
       fail-fast: false
       
     steps:
       - name: Check out code
         uses: actions/checkout@v2
         
       - name: Setup Terraform
         uses: hashicorp/setup-terraform@v1
         with:
           terraform_version: 1.0.9
           
       - name: Configure AWS Credentials
         uses: aws-actions/configure-aws-credentials@v1
         with:
           aws-region: us-east-1
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           
       - name: Intialize Terraform
         id: terra-init
         run: |
           terraform init -input=false -no-color
           
       - name: Terraform Validate
         id: validate
         run: terraform validate -no-color
         
       - name: Plan terraform
         id: terra-plan
         if: github.event_name == 'pull_request'
         run: terraform plan -input=false -no-color
         continue-on-error: true
         
       - name: Update Pull Request
         uses: actions/github-script@0.9.0
         if: github.event_name == 'pull_request'
         env:
           PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
         with:
              github-token: ${{ secrets.TOKEN_GITHUB }}
              script: |
                const output = `#### Terraform Format and Style üñå\`${{ steps.terra-fmt.outcome }}\`
                #### Terraform Initialization ‚öôÔ∏è\`${{ steps.terra-init.outcome }}\`
                #### Terraform Plan üìñ\`${{ steps.terra-plan.outcome }}\`
                #### Terraform Validation ü§ñ\`${{ steps.terra-validate.outcome }}\`

                <details><summary>Show Plan</summary>

                \`\`\`\n
                ${process.env.PLAN}
                \`\`\`

                </details>

                *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

                github.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: output
                })
           
       
     
         
         
